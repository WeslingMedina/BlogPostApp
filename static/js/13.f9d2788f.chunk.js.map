{"version":3,"sources":["shared/components/ColoredButton.js","shared/components/DialogTitleWithCloseIcon.js","shared/components/FormDialog.js","logged_in/components/subscription/stripe/StripeTextField.js","logged_in/components/subscription/stripe/StripeCardForm.js","logged_in/components/subscription/stripe/StripeIBANForm.js","logged_in/components/subscription/AddBalanceDialog.js"],"names":["memo","props","color","children","theme","buttonTheme","createTheme","adaptV4Theme","_objectSpread","palette","primary","main","buttonProps","_ref","_objectWithoutProperties","React","createElement","StyledEngineProvider","injectFirst","ThemeProvider","Button","Object","assign","withTheme","paddingBottom","onClose","disabled","title","disablePadding","DialogTitle","style","spacing","paddingLeft","paddingRight","paddingTop","width","Box","display","justifyContent","Typography","variant","IconButton","onClick","marginRight","marginTop","aria-label","size","CloseIcon","withStyles","dialogPaper","flexDirection","alignItems","maxWidth","actions","dialogPaperScrollPaper","maxHeight","dialogContent","classes","open","loading","headline","onFormSubmit","content","hideBackdrop","Dialog","disableEscapeKeyDown","paper","paperScrollPaper","DialogTitleWithCloseIcon","DialogContent","className","onSubmit","stripeOptions","StripeElement","select","rest","options","base","typography","body1","text","fontSize","fontSmoothing","::placeholder","secondary","invalid","iconColor","error","TextField","InputLabelProps","shrink","inputProps","component","StripeCardForm","stripeError","setStripeError","amount","amountError","onAmountChange","name","setName","Grid","container","item","xs","margin","required","label","value","onChange","event","target","fullWidth","autoFocus","autoComplete","type","parseInt","helperText","InputProps","startAdornment","InputAdornment","position","StripeTextField","CardElement","StripeIBANForm","email","setEmail","IbanElement","supportedCountries","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","stripePromise","loadStripe","paymentOptions","AddBalanceDialog","onSuccess","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","paymentOption","setPaymentOption","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setAmount","_useState13","_useState14","setAmountError","elements","useElements","stripe","useStripe","getStripePaymentInfo","card","getElement","billing_details","sepa_debit","FormDialog","_asyncToGenerator","_callee","_yield$stripe$createP","_context","preventDefault","createPaymentMethod","message","_x","apply","arguments","pb","mb","map","option","key","ColoredButton","disableElevation","common","black","Fragment","HighlightedInformation","StripeIbanForm","renderPaymentComponent","ButtonCircularProgress","Wrapper","Elements"],"mappings":"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","file":"static/js/13.f9d2788f.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\n\nfunction ColoredButton(props) {\n  const { color, children, theme } = props;\n  const buttonTheme = createTheme(adaptV4Theme({\n    ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  }));\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={buttonTheme}>\n        <Button {...buttonProps} color=\"primary\">\n          {children}\n        </Button>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default memo(ColoredButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, DialogTitle, Typography, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction DialogTitleWithCloseIcon(props) {\n  const {\n    theme,\n    paddingBottom,\n    onClose,\n    disabled,\n    title,\n    disablePadding\n  } = props;\n  return (\n    <DialogTitle\n      style={{\n        paddingBottom: paddingBottom\n          ? paddingBottom && disablePadding\n            ? 0\n            : paddingBottom\n          : theme.spacing(3),\n        paddingLeft: disablePadding ? 0 : null,\n        paddingRight: disablePadding ? 0 : null,\n        paddingTop: disablePadding ? 0 : theme.spacing(2),\n        width: \"100%\"\n      }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"h5\">{title}</Typography>\n        <IconButton\n          onClick={onClose}\n          style={{ marginRight: -12, marginTop: -10 }}\n          disabled={disabled}\n          aria-label=\"Close\"\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n    </DialogTitle>\n  );\n}\n\nDialogTitleWithCloseIcon.propTypes = {\n  theme: PropTypes.object,\n  paddingBottom: PropTypes.number,\n  onClose: PropTypes.func,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n  disablePadding: PropTypes.bool\n};\n\nexport default withTheme(DialogTitleWithCloseIcon);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport DialogTitleWithCloseIcon from \"./DialogTitleWithCloseIcon\";\n\nconst styles = theme => ({\n  dialogPaper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingBottom: theme.spacing(3),\n    maxWidth: 420\n  },\n  actions: {\n    marginTop: theme.spacing(2)\n  },\n  dialogPaperScrollPaper: {\n    maxHeight: \"none\"\n  },\n  dialogContent: {\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n});\n\n/**\n * A Wrapper around the Dialog component to create centered\n * Login, Register or other Dialogs.\n */\nfunction FormDialog(props) {\n  const {\n    classes,\n    open,\n    onClose,\n    loading,\n    headline,\n    onFormSubmit,\n    content,\n    actions,\n    hideBackdrop\n  } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableEscapeKeyDown={loading}\n      classes={{\n        paper: classes.dialogPaper,\n        paperScrollPaper: classes.dialogPaperScrollPaper\n      }}\n      hideBackdrop={hideBackdrop ? hideBackdrop : false}>\n      <DialogTitleWithCloseIcon\n        title={headline}\n        onClose={onClose}\n        disabled={loading}\n      />\n      <DialogContent className={classes.dialogContent}>\n        <form onSubmit={onFormSubmit}>\n          <div>{content}</div>\n          <Box width=\"100%\" className={classes.actions}>\n            {actions}\n          </Box>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nFormDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  headline: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n  content: PropTypes.element.isRequired,\n  actions: PropTypes.element.isRequired,\n  hideBackdrop: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FormDialog);\n","import React from \"react\";\nimport { TextField } from \"@mui/material\";\nimport withTheme from \"@mui/styles/withTheme\";\n\nfunction StripeTextField(props) {\n  const { stripeOptions, StripeElement, select, theme, ...rest } = props;\n  const options = {\n    style: {\n      base: {\n        ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary,\n        },\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main,\n      },\n    },\n    ...stripeOptions,\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true,\n      }}\n      inputProps={{ component: StripeElement, options: options }}\n      {...rest}\n    />\n  );\n}\n\nexport default withTheme(StripeTextField);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport { CardElement } from \"@stripe/react-stripe-js\";\nimport StripeTextField from \"./StripeTextField\";\n\nfunction StripeCardForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          fullWidth\n          label=\"Credit Card\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          variant=\"outlined\"\n          required\n          StripeElement={CardElement}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeCardForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired\n};\n\nexport default StripeCardForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport StripeTextField from \"./StripeTextField\";\nimport { IbanElement } from \"@stripe/react-stripe-js\";\n\nfunction StripeIBANForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName,\n    email,\n    setEmail\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          required\n          variant=\"outlined\"\n          fullWidth\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value);\n          }}\n          type=\"email\"\n          margin=\"none\"\n          label=\"Email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          variant=\"outlined\"\n          fullWidth\n          label=\"IBAN\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          required\n          StripeElement={IbanElement}\n          stripeOptions={{ supportedCountries: [\"SEPA\"] }}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeIBANForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired\n};\n\nexport default StripeIBANForm;\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  IbanElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { Grid, Button, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport StripeCardForm from \"./stripe/StripeCardForm\";\nimport StripeIbanForm from \"./stripe/StripeIBANForm\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport ColoredButton from \"../../../shared/components/ColoredButton\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n\nconst paymentOptions = [\"Credit Card\", \"SEPA Direct Debit\"];\n\nconst AddBalanceDialog = withTheme(function (props) {\n  const { open, theme, onClose, onSuccess } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [paymentOption, setPaymentOption] = useState(\"Credit Card\");\n  const [stripeError, setStripeError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [amountError, setAmountError] = useState(\"\");\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const onAmountChange = amount => {\n    if (amount < 0) {\n      return;\n    }\n    if (amountError) {\n      setAmountError(\"\");\n    }\n    setAmount(amount);\n  };\n\n  const getStripePaymentInfo = () => {\n    switch (paymentOption) {\n      case \"Credit Card\": {\n        return {\n          type: \"card\",\n          card: elements.getElement(CardElement),\n          billing_details: { name: name }\n        };\n      }\n      case \"SEPA Direct Debit\": {\n        return {\n          type: \"sepa_debit\",\n          sepa_debit: elements.getElement(IbanElement),\n          billing_details: { email: email, name: name }\n        };\n      }\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  const renderPaymentComponent = () => {\n    switch (paymentOption) {\n      case \"Credit Card\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeCardForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                name={name}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the credit card number{\" \"}\n              <b>4242 4242 4242 4242 04 / 24 24 242 42424</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      case \"SEPA Direct Debit\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeIbanForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                setEmail={setEmail}\n                name={name}\n                email={email}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the IBAN\n              <br />\n              <b>DE89370400440532013000</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  return (\n    <FormDialog\n      open={open}\n      onClose={onClose}\n      headline=\"Add Balance\"\n      hideBackdrop={false}\n      loading={loading}\n      onFormSubmit={async event => {\n        event.preventDefault();\n        if (amount <= 0) {\n          setAmountError(\"Can't be zero\");\n          return;\n        }\n        if (stripeError) {\n          setStripeError(\"\");\n        }\n        setLoading(true);\n        const { error } = await stripe.createPaymentMethod(\n          getStripePaymentInfo()\n        );\n        if (error) {\n          setStripeError(error.message);\n          setLoading(false);\n          return;\n        }\n        onSuccess();\n      }}\n      content={\n        <Box pb={2}>\n          <Box mb={2}>\n            <Grid container spacing={1}>\n              {paymentOptions.map(option => (\n                <Grid item key={option}>\n                  <ColoredButton\n                    variant={\n                      option === paymentOption ? \"contained\" : \"outlined\"\n                    }\n                    disableElevation\n                    onClick={() => {\n                      setStripeError(\"\");\n                      setPaymentOption(option);\n                    }}\n                    color={theme.palette.common.black}\n                  >\n                    {option}\n                  </ColoredButton>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n          {renderPaymentComponent()}\n        </Box>\n      }\n      actions={\n        <Fragment>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            size=\"large\"\n            disabled={loading}\n          >\n            Pay with Stripe {loading && <ButtonCircularProgress />}\n          </Button>\n        </Fragment>\n      }\n    />\n  );\n});\n\nAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nfunction Wrapper(props) {\n  const { open, onClose, onSuccess } = props;\n  return (\n    <Elements stripe={stripePromise}>\n      {open && (\n        <AddBalanceDialog open={open} onClose={onClose} onSuccess={onSuccess} />\n      )}\n    </Elements>\n  );\n}\n\n\nWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default Wrapper;\n"],"sourceRoot":""}